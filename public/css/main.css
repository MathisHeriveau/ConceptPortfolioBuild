body {
    overflow: hidden;
    position: relative;
    /* Rectangle 2 */

    background: linear-gradient(to top , #D5A19A, #DAB1AC, #E1CBC7);

    height: 100vh;
    margin: 0;
    padding: 0;
    width: 100vw;
}

H1, H2, H3, H4, H5, H6, 
P, A, SPAN, DIV{
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: 600;
}

button{
    font-family: 'Poppins', sans-serif;
    font-weight: 600;
    font-size: 1rem;
    padding: 10px 20px;
    border: none;
    outline: none;
    cursor: pointer;
    border-radius: 30px;
    background: black;
    color: white;
    transition: 0.5s;
    width: 200px;
    cursor: pointer;
    z-index: 100;
}

#container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}


header {
    display: grid;
    grid-template-columns: 150px 1fr;
    align-items: center;
    margin: 0;
    position: fixed;
    width: 100%;
    z-index: 100;
    margin: 10px;
}

.logo {
    display: flex;
    align-items: center;
    margin-left: 50px;
}

.logo img {
    width: 50px;
    height: 50px;
}
nav{
    margin-left: 10vw;
}
nav ul {
    display: flex;
    justify-content: space-center;
    list-style: none;
}

nav ul li {
    margin: 0 20px;
    position: relative;
    cursor: pointer;
    transition: 0.5s;

}

nav ul li::after {
    content: "";
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 1.5px;
    background: black;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.5s;
}

nav ul li:hover::after {
    transform: scaleX(1);
    transform-origin: left;
}

nav ul li a {
    text-decoration: none;
    color: black;
    font-size: 1rem;
    font-weight: 500;
    /* letter spacing  */
    letter-spacing: 2px;

}


main{
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 20px;
    height: 100vh;
    width: 100vw;
    position: relative;
}

.main__left{
    display: flex;
    justify-content: center;
    flex-direction: column;
    margin-left: 15%;
}

.main__left h5{
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 20px;
    letter-spacing: 2px;
    color : #DB726E;
}

.main__left h3{
    font-size: 3rem;
    font-weight: 600;
    margin-bottom: 20px;
    letter-spacing: 15px;
}

.main__left p {
    margin-bottom: 20px;
    letter-spacing: 2px;
    width: 80%;
}

.lumiere{
    position: absolute;
    top: 25%;
    left: 45%;
    background: rgba(255, 255, 255, 1);
    z-index: -1;

    border-radius: 50%;

    width: 100px;
    height: 70px;

    /* drop shadow EBCCC7 10px 10px 10px; */
    box-shadow: 10px 10px 10px rgba(235, 204, 199, 1);
    /* Blur 10px */
    filter: blur(20px);
    /* Inner shadow 10px 10px 10px 10px #EBCCC7 */
    box-shadow: inset 10px 10px 10px 10px rgba(235, 204, 199, 0.7);
    /* Layer blur 10px */

}









.speech-bubble{
    position: absolute;
    width: 99vw;
    min-height: 100svh;
    font-family: 'Delicious Handrawn', handwriting;
    font-size: 1.2rem;
    display: grid;
    place-content: center;
    z-index: 10;
    top: 17%;
    left: 17%;
}
.developer input[name=joke]{
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

.developer{
    --_speed: 500ms;
    position: relative;
}


.developer .speech {
    --_bg: #EDEDED;
    position: absolute;
    top: -120px;
    left: -40px;
    width: 290px;
    padding: 1.5rem 3rem;
    border: .25rem solid #000;
    background-color: var(--_bg);
    box-shadow: 5px 5px 0 0 rgba(0, 0, 0, 0.16);
    border-radius: 50%;
    font-size: 1.3rem;
    transition: all 500ms ease-in-out;
    scale: 0;
    display: grid;
    place-content: center;
    grid-template-areas: 'stack';
}

.speech::before {
    content: "";
    position: absolute;
    left: 90px;
    bottom: -50px;
    width: 8rem;
    height: 4rem;
    border-radius: 100%;
    rotate: -25deg;
    box-shadow:5px 0, 25px -5px var(--_bg), 25px -5px 0 5px;    
    clip-path: polygon(0% 50%, 140% 50%, 150% 100%, 0% 100%);
}

#btn-question,
#btn-answer{
    transition: translate 300ms ease-in-out 500ms,opacity 300ms ease-in-out 500ms,background-color 300ms ease-in-out;
    text-align: center;
    width: fit-content;
    padding: .5rem .75rem; 
    white-space: nowrap;
    background: #FFF;
    z-index: 99;
    border: 2px solid black;
    text-transform: uppercase;
    border-radius: 10px;
    font-size: 1rem;
		box-shadow: 5px 5px 0 0 rgba(0, 0, 0, 0.16);
}


#btn-answer{
		opacity: 0;
	 	translate: 20px -40px;
		pointer-events: none;

}


@media (min-width: 500px) {
    .developer .speech {
        top: -100px;
        left: 100px;
        width: 340px;
        font-size: 1rem;
    }

    .speech::before {
        left: -20px;
        bottom: -30px;
        rotate: -5deg;
    }
}

#btn-question:hover,
#btn-answer:hover{
    background-color: black;
    color: #FFF;
}
.speech p{
    position: relative;
    grid-area: stack;
    transition: opacity var(--_speed);
    opacity: 0;
}

.speech p::before,
.speech p::after{
    content: '';
    position: absolute;
    background-color: var(--_bg);
    transition: inset 150ms linear;
}
.speech p::before{
    inset: -3px -3px 50% -4px;
}
.speech p::after{
    inset:  50% -3px -3px -4px;
    transform-origin: left;
}


/* transitions on radio checked */
/* reveal speech bubble */
.developer input[name=joke]:checked~.speech {
    scale: 100%;
}

/* reveal question  */
input[id=show-question]:checked~.speech #question{
    opacity: 100%;
	
}
input[id=show-question]:checked ~ .speech #question::before {
    inset: 0 0 50% 100% !important;
    transition: inset var(--_speed) linear;
    transition-delay: var(--_speed);
}
input[id=show-question]:checked ~ .speech #question::after {
    inset: 50% 0 0 100%  !important;
    transition: inset calc(var(--_speed) * 1.5) linear;
    transition-delay: calc(var(--_speed) * 2);
}

input[id=show-answer]:checked~.speech #answer{
    opacity: 100%;
	
}
input[id=show-answer]:checked ~ .speech #answer::before {
    inset: 0 0 50% 100% !important;
    transition: inset var(--_speed) linear;
    transition-delay: var(--_speed);
}
input[id=show-answer]:checked ~ .speech #answer::after {
    inset: 50% 0 0 100%  !important;
    transition: inset calc(var(--_speed) * 1.5) linear;
    transition-delay: calc(var(--_speed) * 2);
}




#grid{
    position: absolute;
    bottom: 5%;
    right: 5%;
    cursor: pointer;
    z-index: 100;
}

.animationSortie{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 100;
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: repeat(10, 1fr);
    z-index: -5;
}

.band{
    width: 100%;
    height: 100%;
    transform: translateX(0);
    z-index: 10000;
    background-color: #DCBBB5;
}


/* primary","secondary","tertiary */
.primary{
    animation: sortie1 3s forwards; 
    transform: translateX(100%);
}

.secondary{
    animation: sortie2 3s forwards;
    transform: translateX(100%);
}

.tertiary{
    animation: sortie3 3s forwards;
    transform: translateX(100%);
}

@keyframes sortie1 {
    0% {
        transform: translateX(100%);
        origin: 0 0;
    }
    70% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(0);
    }
}

@keyframes sortie2 {
    0% {
        transform: translateX(100%);
        origin: 0 0;
    }
    10% {
        transform: translateX(100%);
    }
    80% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(0);
    }
}

@keyframes sortie3 {
    0% {
        transform: translateX(100%);
        origin: 0 0;
    }
    20% {
        transform: translateX(100%);
    }
    90% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(0);
    }
}

/* "primaryOUT","secondaryOUT","tertiaryOUT" */
.primaryOUT{
    animation: sortie1OUT 3s forwards;
    transform: translateX(0);
}

.secondaryOUT{
    animation: sortie2OUT 3s forwards;
    transform: translateX(0);
}

.tertiaryOUT{
    animation: sortie3OUT 3s forwards;
    transform: translateX(0);
}

@keyframes sortie1OUT {
    0% {
        transform: translateX(0);
        origin: 0 0;
    }
    70% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(100%);
    }
}

@keyframes sortie2OUT {
    0% {
        transform: translateX(0);
        origin: 0 0;
    }
    10% {
        transform: translateX(0);
    }
    80% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(100%);
    }
}

@keyframes sortie3OUT {
    0% {
        transform: translateX(0);
        origin: 0 0;
    }
    20% {
        transform: translateX(0);
    }
    90% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(100%);
    }
}

